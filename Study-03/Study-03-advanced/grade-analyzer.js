#!/usr/bin/env node

const fs = require('fs');
const path = require('path');

const dataPath = path.join(process.cwd(), 'student_data.json');

if (!fs.existsSync(dataPath)) {
    console.log('‚ö†Ô∏è ÌïôÏÉù Îç∞Ïù¥ÌÑ∞ ÌååÏùºÏù¥ ÏóÜÏäµÎãàÎã§. student-data-generator.jsÎ•º Î®ºÏ†Ä Ïã§ÌñâÌïòÏÑ∏Ïöî.');
    process.exit(1);
}

const students = JSON.parse(fs.readFileSync(dataPath, 'utf8'));

console.log('üìä ÏÑ±Ï†Å Î∂ÑÏÑù Î≥¥Í≥†ÏÑú');
console.log('='.repeat(60));

// Ï†ÑÏ≤¥ ÌÜµÍ≥Ñ
const totalStudents = students.length;
const avgScore = students.reduce((sum, s) => sum + s.averageScore, 0) / totalStudents;

console.log('\nüìà Ï†ÑÏ≤¥ ÌÜµÍ≥Ñ');
console.log(`  ‚Ä¢ Ï¥ù ÌïôÏÉù Ïàò: ${totalStudents}Î™Ö`);
console.log(`  ‚Ä¢ Ï†ÑÏ≤¥ ÌèâÍ∑† Ï†êÏàò: ${avgScore.toFixed(1)}Ï†ê`);

// Îì±Í∏âÎ≥Ñ Î∂ÑÌè¨ (ÏÉÅÎåÄÌèâÍ∞Ä)
const gradeDistribution = { A: 0, B: 0, C: 0, D: 0 };
students.forEach(s => {
    if (s.grade && s.grade !== 'F') {
        gradeDistribution[s.grade]++;
    }
});

console.log('\nüìä Îì±Í∏âÎ≥Ñ Î∂ÑÌè¨ (ÏÉÅÎåÄÌèâÍ∞Ä)');
const gradeInfo = {
    A: 'ÏÉÅÏúÑ 20%',
    B: 'ÏÉÅÏúÑ 21-40%', 
    C: 'ÏÉÅÏúÑ 41-70%',
    D: 'ÌïòÏúÑ 30%'
};

Object.entries(gradeDistribution).forEach(([grade, count]) => {
    const percentage = (count / totalStudents * 100).toFixed(1);
    const bar = '‚ñà'.repeat(Math.floor(percentage / 2));
    console.log(`  ${grade} (${gradeInfo[grade]}): ${bar} ${count}Î™Ö (${percentage}%)`);
});

// Î∞òÎ≥Ñ ÌèâÍ∑†
const classStat = {};
students.forEach(s => {
    if (!classStat[s.class]) {
        classStat[s.class] = { total: 0, count: 0 };
    }
    classStat[s.class].total += s.averageScore;
    classStat[s.class].count++;
});

console.log('\nüè´ Î∞òÎ≥Ñ ÌèâÍ∑† ÏÑ±Ï†Å');
Object.entries(classStat).forEach(([className, stat]) => {
    const classAvg = (stat.total / stat.count).toFixed(1);
    console.log(`  ${className}: ${classAvg}Ï†ê (${stat.count}Î™Ö)`);
});

// Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ ÌèâÍ∑†
const categoryStats = {};
students.forEach(student => {
    student.quizHistory.forEach(quiz => {
        Object.entries(quiz.categoryScores).forEach(([cat, score]) => {
            if (!categoryStats[cat]) {
                categoryStats[cat] = { total: 0, count: 0 };
            }
            categoryStats[cat].total += score.percentage;
            categoryStats[cat].count++;
        });
    });
});

console.log('\nüìö Ïπ¥ÌÖåÍ≥†Î¶¨Î≥Ñ ÌèâÍ∑† Ï†ïÎãµÎ•†');
Object.entries(categoryStats).forEach(([cat, stat]) => {
    const catAvg = (stat.total / stat.count).toFixed(1);
    const bar = '‚ñ™'.repeat(Math.floor(catAvg / 5));
    console.log(`  ${cat}: ${bar} ${catAvg}%`);
});

// ÏÉÅÏúÑ/ÌïòÏúÑ ÌïôÏÉù
const sortedStudents = [...students].sort((a, b) => b.averageScore - a.averageScore);

console.log('\nüèÜ ÏÉÅÏúÑ 5Î™Ö');
sortedStudents.slice(0, 5).forEach((s, i) => {
    console.log(`  ${i + 1}. ${s.name} (${s.class}): ${s.averageScore}Ï†ê [${s.grade}]`);
});

console.log('\nüìå ÌïòÏúÑ 5Î™Ö (Í∞úÏÑ† ÌïÑÏöî)');
sortedStudents.slice(-5).reverse().forEach((s, i) => {
    console.log(`  ${i + 1}. ${s.name} (${s.class}): ${s.averageScore}Ï†ê [${s.grade}]`);
});

console.log('\n' + '='.repeat(60));